# -*- coding: utf-8 -*-
"""image_processing_library.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14gaAAb1_GBtEu9d2WNvLGdV3osRX-fxP
"""

!pip install opencv-python

import cv2

class ImageProcessor:
    @staticmethod
    def convert_to_gray(image_path):
        """Convert an image to grayscale."""
        image = cv2.imread(image_path)
        if image is None:
            raise FileNotFoundError(f"Could not find image at {image_path}")
        gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
        return gray_image

    @staticmethod
    def apply_gaussian_blur(image, kernel_size):
        """Apply Gaussian blur to the image."""
        blurred_image = cv2.GaussianBlur(image, (kernel_size, kernel_size), 0)
        return blurred_image

    @staticmethod
    def detect_edges(image, low_threshold, high_threshold):
        """Detect edges using the Canny edge detection algorithm."""
        edges = cv2.Canny(image, low_threshold, high_threshold)
        return edges

import cv2
from google.colab.patches import cv2_imshow

def main():
    image_path = 'sample.jpg'

    # Convert image to grayscale
    try:
        gray_image = ImageProcessor.convert_to_gray(image_path)
        cv2.imwrite('gray_image.jpg', gray_image)
        print("Grayscale image saved as 'gray_image.jpg'")
        cv2_imshow(gray_image)  # Display in Colab
    except FileNotFoundError as e:
        print(e)
        return

    # Apply Gaussian blur to the grayscale image
    blurred_image = ImageProcessor.apply_gaussian_blur(gray_image, 7)
    cv2.imwrite('blurred_image.jpg', blurred_image)
    print("Blurred image saved as 'blurred_image.jpg'")
    cv2_imshow(blurred_image)  # Display in Colab

    # Detect edges using the Canny edge detection algorithm
    edges = ImageProcessor.detect_edges(blurred_image, 50, 150)
    cv2.imwrite('edges.jpg', edges)
    print("Edge-detected image saved as 'edges.jpg'")
    cv2_imshow(edges)  # Display in Colab

if __name__ == "__main__":
    main()

!wget https://raw.githubusercontent.com/opencv/opencv/master/samples/data/lena.jpg -O sample.jpg